import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Formatter;

public class Grafo {
	private static String nos[];
	private static int MAX=100;
	private static int total;
	
	Grafo(){
		total=0;
	}
	
	public static void leitor(String path) throws IOException {
		nos = new String[MAX];
		boolean sinal;
		BufferedReader buffRead = new BufferedReader(new FileReader(path));
		String linha = ""; 
		linha = buffRead.readLine();
		for(int i=0; i<MAX && linha != null; i++){
			System.out.println("Linha "+i+": "+linha);
			sinal=false;
			for(int j=0; j<total; j++){
				if(linha.equals(nos[j])){
					sinal=true;
					//System.out.println("Essa porra deu igual:"+linha);
				}
			}
			if(!sinal){
				if(!linha.equals("") && linha.charAt(0)=='1')
					nos[total++]=linha;
			}
			linha = buffRead.readLine();
		}
		buffRead.close(); 
	}
	
	public static void imprimeSubgrupos(){
		for(int i=0; i<total;i++)
			System.out.println(nos[i]);
	}

    public static void digrafo() throws IOException {
    	Formatter arquivo;
    	String aux="";
		arquivo = new Formatter("Digraph.txt");
		int matriz[][] = new int[total][total];
		//inicializa matriz com zeros
		for(int a=0; a<total; a++)
			for(int b=0; b<total; b++)
				matriz[a][b]=0;
		//ordenar o nó
		for(int i = total - 1; i > 0; i--){
			for(int j = 0; j < i; j++){
				if(nos[j].length() > nos[j+1].length()){
					aux = nos[j];
					nos[j] = nos[j+1];
					nos[j+1] = aux; 
					
				}
			}
		}
		//preenchimento da matriz
		for(int x = 0; x<total; x++)
			for(int y=x+1; y<total; y++){
				boolean aresta = true;
				for(int z=0; z<nos[x].length() && aresta == true; z++){
					aresta=false;
					for(int w=0; w<nos[y].length(); w++)
						if(nos[x].charAt(z) == nos[y].charAt(w))
							aresta = true;
				}
				if(aresta == true)
					matriz[x][y]=1;
			}
		//eliminando os nós devido a transitividade
		for(int c = 0; c<total; c++)
			for(int d = c+1; d<total; d++)
				if(matriz[c][d]==1){
					for(int e = d+1; e<total; e++)
						if(matriz[d][e]==1 && matriz[c][e]==1)
							matriz[c][e] = 0;
				}
		//gravando as arestas em arquivo
		arquivo.format("digraph G {\r\n\r\n");
		for(int m = 0; m<total; m++)
			for(int n = 0; n<total; n++)
				if(matriz[m][n] == 1)
					arquivo.format("\r\t\"%s\" -> \"%s\" \r\n", nos[m], nos[n]);
		arquivo.format("\r\n}");
		arquivo.close();
	}

}
